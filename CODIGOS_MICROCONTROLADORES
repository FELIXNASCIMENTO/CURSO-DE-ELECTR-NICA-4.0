
const int led = 13;
void setup() {
  
  pinMode(led, OUTPUT);
  
}

void loop() {


    digitalWrite(led, HIGH);   // Liga o LED
    delay(2500);                       
    digitalWrite(led, LOW);    // Desliga o LED
    delay(1500);                       
 
}
-----------------------------------------------------------



const int ledPin = 8;     // Pino para o LED
const int buttonPin = 2;  // Pino para o botão

void setup() {
  // Configura o pino do LED como saída
  pinMode(ledPin, OUTPUT);
  // Configura o pino do botão como entrada
  pinMode(buttonPin, INPUT);
}

void loop() {
  // Lê o estado do botão
  int buttonState = digitalRead(buttonPin);

  // Verifica se o botão está pressionado (HIGH)
  if (buttonState == HIGH) {
    // Liga o LED
    digitalWrite(ledPin, HIGH); 
  } 
  else {
    // Desliga o LED
    digitalWrite(ledPin, LOW);
  }
}
-------------------------------------------------------------------------


const int pinLED = 9;             // Pino PWM para o LED
const int pinPotentiometer = A0;   // Pino analógico para o potenciômetro

void setup() {
  // Configurando o pino do LED como saída
  pinMode(pinLED, OUTPUT);
  
  // Inicializando a comunicação serial para depuração
  Serial.begin(9600);
}

void loop() {
  // Lendo o valor do potenciômetro (0 a 1023)
  int potentiometerValue = analogRead(pinPotentiometer);
  
  // Mapeando o valor do potenciômetro para o intervalo de PWM (0 a 255)
  int ledBrightness = map(potentiometerValue, 0, 1023, 0, 255);
  
  // Ajustando o brilho do LED com base no valor lido do potenciômetro
  analogWrite(pinLED, ledBrightness);
//verificar os dados recebidos
  Serial.print("Potentiometer Value: ");
  Serial.print(potentiometerValue);
  Serial.print(" - LED Brightness: ");
  Serial.println(ledBrightness);

  delay(500);
}
---------------------------------------------------------------------------------

ponteci0metro e 9 leds

// Definindo os pinos para os LEDs e o potenciômetro
const int pinLEDs[] = {2, 3, 4, 5, 6, 7, 8, 9, 10};  // Pinos para os LEDs
const int pinPot = A0;   // Pino analógico para o potenciômetro

void setup() {
  // Configurando os pinos dos LEDs como saída
  for (int i = 0; i < 9; i++) {
    pinMode(pinLEDs[i], OUTPUT);
  }

  // Inicializando a comunicação serial para depuração
  Serial.begin(9600);
}

void loop() {
  // Lendo o valor do potenciômetro (0 a 1023)
  int potValue = analogRead(pinPot);

  // Dividindo o valor do potenciômetro para determinar quantos LEDs acender (0 a 9 LEDs)
  int numLEDsOn = map(potValue, 0, 1023, 0, 9);  // Mapeia o valor do potenciômetro para 0 a 9 LEDs

  // Ajustando os LEDs com base no valor lido do potenciômetro
  for (int i = 0; i < 9; i++) {
    if (i < numLEDsOn) {
      analogWrite(pinLEDs[i], 255);  // Acende o LED com brilho máximo
    } else {
      analogWrite(pinLEDs[i], 0);    // Desliga o LED
    }
  }

  // Imprimindo o valor do potenciômetro e o número de LEDs acesos
  Serial.print("Pot Value: ");
  Serial.print(potValue);
  Serial.print(" - LEDs On: ");
  Serial.println(numLEDsOn);

  // Atraso para suavizar a leitura
  delay(100);
}
------------------------------------------------------------------------------------------------------------------



const int analogPin=A0;
int sensorVal=0;
int timer=0;
void setup() {
  //direcionado as portas
  pinMode(12,OUTPUT);
  pinMode(11,OUTPUT);

  Serial.begin(9600);

}

void loop() {
  sensorVal=analogRead(analogPin);
  timer = map(sensorVal, 0 ,1023, 10, 500);
  digitalWrite(12,HIGH);
  delay(timer);
  digitalWrite(12,LOW);
  delay(timer);
  digitalWrite(12,HIGH);
  delay(timer);
  digitalWrite(12,LOW);
  delay(timer);
  digitalWrite(11,HIGH);
  delay(timer);
  digitalWrite(11,LOW);
  delay(timer);
  digitalWrite(12,HIGH);
  delay(timer);
  digitalWrite(12,LOW);
  delay(timer);



  
 Serial.print("valor do sensor %d ");
 Serial.print("valor convertido: %d");
Serial.print(sensorVal);
Serial.print(timer);

}

--------------------------------------------------------------------------------------------





